{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nimport { useMergedRefs } from '../../internal/useMergedRefs';\nvar InlineCheckbox = /*#__PURE__*/React.forwardRef(function InlineCheckbox(props, forwardRef) {\n  var ariaLabel = props.ariaLabel,\n      _props$checked = props.checked,\n      checked = _props$checked === void 0 ? false : _props$checked,\n      disabled = props.disabled,\n      id = props.id,\n      indeterminate = props.indeterminate,\n      name = props.name,\n      _props$onChange = props.onChange,\n      _onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      title = props.title;\n\n  var prefix = usePrefix();\n  var inputRef = useRef(null);\n  var ref = useMergedRefs([inputRef, forwardRef]);\n  var inputProps = {\n    checked: checked,\n    className: \"\".concat(prefix, \"--checkbox\"),\n    disabled: disabled,\n    id: id,\n    name: name,\n    onClick: onClick,\n    onChange: function onChange(evt) {\n      _onChange(evt.target.checked, id, evt);\n    },\n    onKeyDown: onKeyDown,\n    ref: ref,\n    type: 'checkbox'\n  };\n\n  if (indeterminate) {\n    inputProps.checked = false;\n    inputProps['aria-checked'] = 'mixed';\n  }\n\n  useEffect(function () {\n    inputRef.current.indeterminate = indeterminate;\n  }, [indeterminate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", inputProps),\n  /*#__PURE__*/\n\n  /* eslint-disable jsx-a11y/label-has-for,jsx-a11y/label-has-associated-control,jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */\n  React.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--checkbox-label\"),\n    \"aria-label\": ariaLabel,\n    title: title,\n    onClick: function onClick(evt) {\n      evt.stopPropagation();\n    }\n  }));\n});\nInlineCheckbox.propTypes = {\n  /**\n   * Specify the label for the control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the underlying control is checked, or not\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Specify whether the underlying input control should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the control is in an indterminate state\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Provide an optional tooltip for the InlineCheckbox\n   */\n  title: PropTypes.string\n};\nexport default InlineCheckbox;","map":{"version":3,"sources":["C:/Users/103978781/Desktop/form-mern/node_modules/carbon-components-react/es/components/InlineCheckbox/InlineCheckbox.js"],"names":["PropTypes","React","useEffect","useRef","usePrefix","useMergedRefs","InlineCheckbox","forwardRef","props","ariaLabel","_props$checked","checked","disabled","id","indeterminate","name","_props$onChange","onChange","_onChange","onClick","onKeyDown","title","prefix","inputRef","ref","inputProps","className","concat","evt","target","type","current","createElement","Fragment","htmlFor","stopPropagation","propTypes","string","isRequired","bool","func"],"mappings":"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","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useEffect, useRef } from 'react';\nimport { usePrefix } from '../../internal/usePrefix';\nimport { useMergedRefs } from '../../internal/useMergedRefs';\nvar InlineCheckbox = /*#__PURE__*/React.forwardRef(function InlineCheckbox(props, forwardRef) {\n  var ariaLabel = props.ariaLabel,\n      _props$checked = props.checked,\n      checked = _props$checked === void 0 ? false : _props$checked,\n      disabled = props.disabled,\n      id = props.id,\n      indeterminate = props.indeterminate,\n      name = props.name,\n      _props$onChange = props.onChange,\n      _onChange = _props$onChange === void 0 ? function () {} : _props$onChange,\n      onClick = props.onClick,\n      onKeyDown = props.onKeyDown,\n      title = props.title;\n\n  var prefix = usePrefix();\n  var inputRef = useRef(null);\n  var ref = useMergedRefs([inputRef, forwardRef]);\n  var inputProps = {\n    checked: checked,\n    className: \"\".concat(prefix, \"--checkbox\"),\n    disabled: disabled,\n    id: id,\n    name: name,\n    onClick: onClick,\n    onChange: function onChange(evt) {\n      _onChange(evt.target.checked, id, evt);\n    },\n    onKeyDown: onKeyDown,\n    ref: ref,\n    type: 'checkbox'\n  };\n\n  if (indeterminate) {\n    inputProps.checked = false;\n    inputProps['aria-checked'] = 'mixed';\n  }\n\n  useEffect(function () {\n    inputRef.current.indeterminate = indeterminate;\n  }, [indeterminate]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"input\", inputProps),\n  /*#__PURE__*/\n\n  /* eslint-disable jsx-a11y/label-has-for,jsx-a11y/label-has-associated-control,jsx-a11y/click-events-have-key-events,jsx-a11y/no-noninteractive-element-interactions */\n  React.createElement(\"label\", {\n    htmlFor: id,\n    className: \"\".concat(prefix, \"--checkbox-label\"),\n    \"aria-label\": ariaLabel,\n    title: title,\n    onClick: function onClick(evt) {\n      evt.stopPropagation();\n    }\n  }));\n});\nInlineCheckbox.propTypes = {\n  /**\n   * Specify the label for the control\n   */\n  ariaLabel: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the underlying control is checked, or not\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Specify whether the underlying input control should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Provide an `id` for the underlying input control\n   */\n  id: PropTypes.string.isRequired,\n\n  /**\n   * Specify whether the control is in an indterminate state\n   */\n  indeterminate: PropTypes.bool,\n\n  /**\n   * Provide a `name` for the underlying input control\n   */\n  name: PropTypes.string.isRequired,\n\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked when a user clicks on the control\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * Provide a handler that is invoked on the key down event for the control\n   */\n  onKeyDown: PropTypes.func,\n\n  /**\n   * Provide an optional tooltip for the InlineCheckbox\n   */\n  title: PropTypes.string\n};\nexport default InlineCheckbox;"]},"metadata":{},"sourceType":"module"}