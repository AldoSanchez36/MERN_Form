{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"searchContainerClass\", \"onChange\", \"onClear\", \"translateWithId\", \"placeHolderText\", \"placeholder\", \"labelText\", \"expanded\", \"defaultExpanded\", \"defaultValue\", \"disabled\", \"onExpand\", \"persistent\", \"persistant\", \"id\", \"onBlur\", \"onFocus\"];\n/**\n * Copyright IBM Corp. 2016, 2019\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo, useRef, useState, useEffect } from 'react';\nimport { settings } from 'carbon-components';\nimport Search from '../Search';\nimport setupGetInstanceId from './tools/instanceId';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\nvar translationKeys = {\n  'carbon.table.toolbar.search.label': 'Filter table',\n  'carbon.table.toolbar.search.placeholder': 'Filter table'\n};\n\nvar translateWithId = function translateWithId(id) {\n  return translationKeys[id];\n};\n\nvar TableToolbarSearch = function TableToolbarSearch(_ref) {\n  var _cx;\n\n  var className = _ref.className,\n      searchContainerClass = _ref.searchContainerClass,\n      onChangeProp = _ref.onChange,\n      onClear = _ref.onClear,\n      t = _ref.translateWithId,\n      placeHolderText = _ref.placeHolderText,\n      placeholder = _ref.placeholder,\n      labelText = _ref.labelText,\n      expandedProp = _ref.expanded,\n      defaultExpanded = _ref.defaultExpanded,\n      defaultValue = _ref.defaultValue,\n      disabled = _ref.disabled,\n      onExpand = _ref.onExpand,\n      persistent = _ref.persistent,\n      persistant = _ref.persistant,\n      id = _ref.id,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded || defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var _useState3 = useState(defaultValue || ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var uniqueId = useMemo(getInstanceId, []);\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focusTarget = _useState6[0],\n      setFocusTarget = _useState6[1];\n\n  useEffect(function () {\n    if (focusTarget) {\n      focusTarget.current.querySelector('input').focus();\n      setFocusTarget(null);\n    }\n  }, [focusTarget]);\n  useEffect(function () {\n    if (defaultValue) {\n      onChangeProp('', defaultValue);\n    }\n  }, //eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var searchClasses = cx(className, (_cx = {}, _defineProperty(_cx, searchContainerClass, searchContainerClass), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-active\"), expanded), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-disabled\"), disabled), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-expandable\"), !persistent || !persistent && !persistant), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-persistent\"), persistent || persistant), _cx));\n\n  var handleExpand = function handleExpand(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!disabled) {\n      if (!controlled && (!persistent || !persistent && !persistant)) {\n        setExpandedState(value);\n      }\n\n      if (onExpand) {\n        onExpand(event, value);\n      }\n    }\n  };\n\n  var onChange = function onChange(e) {\n    setValue(e.target.value);\n\n    if (onChangeProp) {\n      onChangeProp(e);\n    }\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    return handleExpand(event, true);\n  };\n\n  var handleOnBlur = function handleOnBlur(event) {\n    return !value && handleExpand(event, false);\n  };\n\n  return /*#__PURE__*/React.createElement(Search, _extends({\n    disabled: disabled,\n    className: searchClasses,\n    value: value,\n    id: typeof id !== 'undefined' ? id : uniqueId.toString(),\n    labelText: labelText || t('carbon.table.toolbar.search.label'),\n    placeholder: placeHolderText || placeholder || t('carbon.table.toolbar.search.placeholder'),\n    onChange: onChange,\n    onClear: onClear,\n    onFocus: onFocus ? function (event) {\n      return onFocus(event, handleExpand);\n    } : handleOnFocus,\n    onBlur: onBlur ? function (event) {\n      return onBlur(event, handleExpand);\n    } : handleOnBlur\n  }, rest));\n};\n\nTableToolbarSearch.propTypes = {\n  children: PropTypes.node,\n\n  /**\n   * Provide an optional class name for the search container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specifies if the search should initially render in an expanded state\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * Provide an optional default value for the Search component\n   */\n  defaultValue: PropTypes.string,\n\n  /**\n   * Specifies if the search should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specifies if the search should expand\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Provide an optional id for the search container\n   */\n  id: PropTypes.string,\n\n  /**\n   * Provide an optional label text for the Search component icon\n   */\n  labelText: PropTypes.string,\n\n  /**\n   * Provide an optional function to be called when the search input loses focus, this will be\n   * passed the event as the first parameter and a function to handle the expanding of the search\n   * input as the second\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optional callback called when the search value is cleared.\n   */\n  onClear: PropTypes.func,\n\n  /**\n   * Provide an optional hook that is called each time the input is expanded\n   */\n  onExpand: PropTypes.func,\n\n  /**\n   * Provide an optional function to be called when the search input gains focus, this will be\n   * passed the event as the first parameter and a function to handle the expanding of the search\n   * input as the second.\n   */\n  onFocus: PropTypes.func,\n  persistant: deprecate(PropTypes.bool, \"\\nThe prop `persistant` for TableToolbarSearch has been deprecated in favor of `persistent`. Please use `persistent` instead.\"),\n\n  /**\n   * Whether the search should be allowed to expand\n   */\n  persistent: PropTypes.bool,\n\n  /**\n   * Deprecated in favor of `placeholder`\n   */\n  placeHolderText: deprecate(PropTypes.string, \"\\nThe prop `placeHolderText` for TableToolbarSearch has been deprecated in favor of `placeholder`. Please use `placeholder` instead.\"),\n\n  /**\n   * Provide an optional placeholder text for the Search component\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Provide an optional className for the overall container of the Search\n   */\n  searchContainerClass: PropTypes.string,\n\n  /**\n   * Optional prop to specify the tabIndex of the <Search> (in expanded state) or the container (in collapsed state)\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Provide custom text for the component for each translation id\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nTableToolbarSearch.defaultProps = {\n  tabIndex: '0',\n  translateWithId: translateWithId,\n  persistent: false,\n  onClear: function onClear() {}\n};\nexport default TableToolbarSearch;","map":{"version":3,"sources":["C:/Users/103978781/Desktop/form-mern/node_modules/carbon-components-react/es/components/DataTable/TableToolbarSearch.js"],"names":["_extends","_defineProperty","_slicedToArray","_objectWithoutProperties","_excluded","cx","PropTypes","React","useMemo","useRef","useState","useEffect","settings","Search","setupGetInstanceId","deprecate","prefix","getInstanceId","translationKeys","translateWithId","id","TableToolbarSearch","_ref","_cx","className","searchContainerClass","onChangeProp","onChange","onClear","t","placeHolderText","placeholder","labelText","expandedProp","expanded","defaultExpanded","defaultValue","disabled","onExpand","persistent","persistant","onBlur","onFocus","rest","_useRef","undefined","controlled","current","_useState","_useState2","expandedState","setExpandedState","_useState3","_useState4","value","setValue","uniqueId","_useState5","_useState6","focusTarget","setFocusTarget","querySelector","focus","searchClasses","concat","handleExpand","event","arguments","length","e","target","handleOnFocus","handleOnBlur","createElement","toString","propTypes","children","node","string","bool","func","tabIndex","oneOfType","number","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"className\", \"searchContainerClass\", \"onChange\", \"onClear\", \"translateWithId\", \"placeHolderText\", \"placeholder\", \"labelText\", \"expanded\", \"defaultExpanded\", \"defaultValue\", \"disabled\", \"onExpand\", \"persistent\", \"persistant\", \"id\", \"onBlur\", \"onFocus\"];\n\n/**\n * Copyright IBM Corp. 2016, 2019\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React, { useMemo, useRef, useState, useEffect } from 'react';\nimport { settings } from 'carbon-components';\nimport Search from '../Search';\nimport setupGetInstanceId from './tools/instanceId';\nimport deprecate from '../../prop-types/deprecate';\nvar prefix = settings.prefix;\nvar getInstanceId = setupGetInstanceId();\nvar translationKeys = {\n  'carbon.table.toolbar.search.label': 'Filter table',\n  'carbon.table.toolbar.search.placeholder': 'Filter table'\n};\n\nvar translateWithId = function translateWithId(id) {\n  return translationKeys[id];\n};\n\nvar TableToolbarSearch = function TableToolbarSearch(_ref) {\n  var _cx;\n\n  var className = _ref.className,\n      searchContainerClass = _ref.searchContainerClass,\n      onChangeProp = _ref.onChange,\n      onClear = _ref.onClear,\n      t = _ref.translateWithId,\n      placeHolderText = _ref.placeHolderText,\n      placeholder = _ref.placeholder,\n      labelText = _ref.labelText,\n      expandedProp = _ref.expanded,\n      defaultExpanded = _ref.defaultExpanded,\n      defaultValue = _ref.defaultValue,\n      disabled = _ref.disabled,\n      onExpand = _ref.onExpand,\n      persistent = _ref.persistent,\n      persistant = _ref.persistant,\n      id = _ref.id,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useRef = useRef(expandedProp !== undefined),\n      controlled = _useRef.current;\n\n  var _useState = useState(defaultExpanded || defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      expandedState = _useState2[0],\n      setExpandedState = _useState2[1];\n\n  var expanded = controlled ? expandedProp : expandedState;\n\n  var _useState3 = useState(defaultValue || ''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      value = _useState4[0],\n      setValue = _useState4[1];\n\n  var uniqueId = useMemo(getInstanceId, []);\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      focusTarget = _useState6[0],\n      setFocusTarget = _useState6[1];\n\n  useEffect(function () {\n    if (focusTarget) {\n      focusTarget.current.querySelector('input').focus();\n      setFocusTarget(null);\n    }\n  }, [focusTarget]);\n  useEffect(function () {\n    if (defaultValue) {\n      onChangeProp('', defaultValue);\n    }\n  }, //eslint-disable-next-line react-hooks/exhaustive-deps\n  []);\n  var searchClasses = cx(className, (_cx = {}, _defineProperty(_cx, searchContainerClass, searchContainerClass), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-active\"), expanded), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-disabled\"), disabled), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-expandable\"), !persistent || !persistent && !persistant), _defineProperty(_cx, \"\".concat(prefix, \"--toolbar-search-container-persistent\"), persistent || persistant), _cx));\n\n  var handleExpand = function handleExpand(event) {\n    var value = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : !expanded;\n\n    if (!disabled) {\n      if (!controlled && (!persistent || !persistent && !persistant)) {\n        setExpandedState(value);\n      }\n\n      if (onExpand) {\n        onExpand(event, value);\n      }\n    }\n  };\n\n  var onChange = function onChange(e) {\n    setValue(e.target.value);\n\n    if (onChangeProp) {\n      onChangeProp(e);\n    }\n  };\n\n  var handleOnFocus = function handleOnFocus(event) {\n    return handleExpand(event, true);\n  };\n\n  var handleOnBlur = function handleOnBlur(event) {\n    return !value && handleExpand(event, false);\n  };\n\n  return /*#__PURE__*/React.createElement(Search, _extends({\n    disabled: disabled,\n    className: searchClasses,\n    value: value,\n    id: typeof id !== 'undefined' ? id : uniqueId.toString(),\n    labelText: labelText || t('carbon.table.toolbar.search.label'),\n    placeholder: placeHolderText || placeholder || t('carbon.table.toolbar.search.placeholder'),\n    onChange: onChange,\n    onClear: onClear,\n    onFocus: onFocus ? function (event) {\n      return onFocus(event, handleExpand);\n    } : handleOnFocus,\n    onBlur: onBlur ? function (event) {\n      return onBlur(event, handleExpand);\n    } : handleOnBlur\n  }, rest));\n};\n\nTableToolbarSearch.propTypes = {\n  children: PropTypes.node,\n\n  /**\n   * Provide an optional class name for the search container\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specifies if the search should initially render in an expanded state\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * Provide an optional default value for the Search component\n   */\n  defaultValue: PropTypes.string,\n\n  /**\n   * Specifies if the search should be disabled\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * Specifies if the search should expand\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Provide an optional id for the search container\n   */\n  id: PropTypes.string,\n\n  /**\n   * Provide an optional label text for the Search component icon\n   */\n  labelText: PropTypes.string,\n\n  /**\n   * Provide an optional function to be called when the search input loses focus, this will be\n   * passed the event as the first parameter and a function to handle the expanding of the search\n   * input as the second\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Provide an optional hook that is called each time the input is updated\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Optional callback called when the search value is cleared.\n   */\n  onClear: PropTypes.func,\n\n  /**\n   * Provide an optional hook that is called each time the input is expanded\n   */\n  onExpand: PropTypes.func,\n\n  /**\n   * Provide an optional function to be called when the search input gains focus, this will be\n   * passed the event as the first parameter and a function to handle the expanding of the search\n   * input as the second.\n   */\n  onFocus: PropTypes.func,\n  persistant: deprecate(PropTypes.bool, \"\\nThe prop `persistant` for TableToolbarSearch has been deprecated in favor of `persistent`. Please use `persistent` instead.\"),\n\n  /**\n   * Whether the search should be allowed to expand\n   */\n  persistent: PropTypes.bool,\n\n  /**\n   * Deprecated in favor of `placeholder`\n   */\n  placeHolderText: deprecate(PropTypes.string, \"\\nThe prop `placeHolderText` for TableToolbarSearch has been deprecated in favor of `placeholder`. Please use `placeholder` instead.\"),\n\n  /**\n   * Provide an optional placeholder text for the Search component\n   */\n  placeholder: PropTypes.string,\n\n  /**\n   * Provide an optional className for the overall container of the Search\n   */\n  searchContainerClass: PropTypes.string,\n\n  /**\n   * Optional prop to specify the tabIndex of the <Search> (in expanded state) or the container (in collapsed state)\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * Provide custom text for the component for each translation id\n   */\n  translateWithId: PropTypes.func.isRequired\n};\nTableToolbarSearch.defaultProps = {\n  tabIndex: '0',\n  translateWithId: translateWithId,\n  persistent: false,\n  onClear: function onClear() {}\n};\nexport default TableToolbarSearch;"]},"metadata":{},"sourceType":"module"}